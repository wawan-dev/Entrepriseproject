@model Paginer<Entreprise>

<h1 class="text-center my-4 text-primary">Mes Entreprises</h1>

<!-- Formulaire de filtrage -->
<form method="get" class="mb-4">
    <div class="row">
        <div class="col-md-8">
            <input type="text" name="filtre" class="form-control" placeholder="Rechercher par nom ou siret" />
        </div>
        <div class="col-md-4">
            <button type="submit" class="btn btn-primary rounded-pill">
                <i class="bi bi-search"></i> Filtrer
            </button>
        </div>
    </div>
</form>

<!-- Pagination -->
<div class="d-flex justify-content-center my-4">
    <ul class="pagination">
        @if (Model.CurrentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("MesEntreprise", new { page = 1 })" aria-label="First">
                    <span aria-hidden="true">&laquo;&laquo;</span>
                </a>
            </li>
            <li class="page-item">
                <a class="page-link" href="@Url.Action("MesEntreprise", new { page = Model.CurrentPage - 1 })" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <a class="page-link" href="#" aria-label="First">
                    <span aria-hidden="true">&laquo;&laquo;</span>
                </a>
            </li>
            <li class="page-item disabled">
                <a class="page-link" href="#" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        }

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            if (i <= 3 || i >= Model.TotalPages - 2 || (i >= Model.CurrentPage - 2 && i <= Model.CurrentPage + 2))
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("MesEntreprise", new { page = i })">@i</a>
                </li>
            }
            else if (i == 4 || i == Model.TotalPages - 3)
            {
                <li class="page-item disabled">
                    <span class="page-link">...</span>
                </li>
            }
        }

        @if (Model.CurrentPage < Model.TotalPages)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("MesEntreprise", new { page = Model.CurrentPage + 1 })" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
            <li class="page-item">
                <a class="page-link" href="@Url.Action("MesEntreprise", new { page = Model.TotalPages })" aria-label="Last">
                    <span aria-hidden="true">&raquo;&raquo;</span>
                </a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <a class="page-link" href="#" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
            <li class="page-item disabled">
                <a class="page-link" href="#" aria-label="Last">
                    <span aria-hidden="true">&raquo;&raquo;</span>
                </a>
            </li>
        }
    </ul>
</div>

<div class="row mb-2">
    <div class="col-md-4">
        <form action="@Url.Action("MesEntreprise", "Entreprise")" method="get">
            <button type="submit" class="btn btn-primary w-100">Réinitialiser</button>
        </form>
    </div>
</div>


<table class="table table-striped table-bordered table-hover">
    <thead class="table-dark">
        <tr>
            <th>Nom</th>
            <th>Siren</th>
            <th>Siret</th>
            <th>Adresse</th>
            <th>Coordonées</th>
            <th>Catégorie</th>
            <th>Dirigeant</th>
            <th>Activité</th> 
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var entreprise in Model.Entreprises)
        {
            <tr>
                <td>@entreprise.Nom</td>
                <td>@entreprise.Siren</td>
                <td>@entreprise.Siret</td>
                <td>@entreprise.Adresse</td>
                <td>
                    @if (!string.IsNullOrEmpty(entreprise.Coordonnees))
                    {
                        var coords = entreprise.Coordonnees.Split(',');
                        <a href="https://www.google.com/maps?q=@coords[0],@coords[1]" target="_blank">
                            @entreprise.Coordonnees
                        </a>
                    }
                    else
                    {
                        <span>Non disponible</span>
                    }
                </td>
                <td>@entreprise.CategorieEntreprise</td>
                <td>@entreprise.Dirigeants</td>
                <td>@entreprise.Activite</td>
                <form action="/Entreprise/Profil" method="post">
                    <input type="hidden" name="id" value="@entreprise.Id" />
                    <td>
                        <button type="submit" class="btn btn-primary w-100 rounded-pill shadow-sm">Profil entreprise</button>
                    </td>
                </form>

            </tr>
        }
    </tbody>
</table>

<!-- Carte avec toutes les entreprises -->
<button id="showAllMap" onclick="showAllMarkers()" class="btn btn-info w-100 rounded-pill shadow-sm mt-4">Afficher toutes les entreprises sur la carte</button>
<div id="map" style="width: 100%; height: 500px; margin-top: 10px;"></div>

<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />

<script>
    const entreprises = [
    @foreach (var entreprise in Model.AllEntreprises) // Utiliser AllEntreprises ici
    {
        if (!string.IsNullOrEmpty(entreprise.Coordonnees))
        {
            var coords = entreprise.Coordonnees.Split(',');
            <text>{
                                nom: '@entreprise.Nom',
                                lat: @coords[0],
                                lng: @coords[1]
                            },</text>
        }
    }
    ];

    let map;

    // Initialisation de la carte
    function initMap() {
        map = L.map('map').setView([46.603354, 1.8883335], 6); // Centre de la France

        // Ajouter le fond de carte (OpenStreetMap par défaut)
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);
    }

    // Affichage des marqueurs pour toutes les entreprises
    function showAllMarkers() {
        entreprises.forEach((entreprise) => {
            const marker = L.marker([parseFloat(entreprise.lat), parseFloat(entreprise.lng)])
                .addTo(map)
                .bindPopup(`<b>${entreprise.nom}</b>`)
                .openPopup();
        });
    }

    // Initialiser la carte lorsque la page est chargée
    window.onload = initMap;
</script>
