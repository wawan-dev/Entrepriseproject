@model Paginer<Entreprise>

<h1>Mes Entreprises</h1>


<form  method="get" class="mb-4">
    <div class="row">
        <div class="col-md-8">
            <input type="text" name="filtre" class="form-control" placeholder="Rechercher par nom ou siret" />
        </div>
        <div class="col-md-4">
            <button type="submit" class="btn btn-primary w-100">Filtrer</button>
        </div>
    </div>
</form>

<!-- Table des entreprises -->
<table class="table table-striped table-bordered table-hover">
    <thead class="table-dark">
        <tr>
            <th>Nom</th>
            <th>Siren</th>
            <th>Siret</th>
            <th>Adresse</th>
            <th>Coordonées</th>
            <th>Catégorie</th>
            <th>Dirigeant</th>
            <th>Activité</th>
            <th>Commentaire</th>
            <th>Note</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var entreprise in Model.Entreprises)
        {
            <tr>
                <td>@entreprise.Nom</td>
                <td>@entreprise.Siren</td>
                <td>@entreprise.Siret</td>
                <td>@entreprise.Adresse</td>
                <td>
                    @if (!string.IsNullOrEmpty(entreprise.Coordonnees))
                    {
                        var coords = entreprise.Coordonnees.Split(',');
                        <a href="https://www.google.com/maps?q=@coords[0],@coords[1]" target="_blank">
                            @entreprise.Coordonnees
                        </a>
                    }
                    else
                    {
                        <span>Non disponible</span>
                    }
                </td>
                <td>@entreprise.CategorieEntreprise</td>
                <td>@entreprise.Dirigeants</td>
                <td>@entreprise.Activite</td>
                <form action="/Entreprise/ModifierEntreprise" method="post">
                    <input type="hidden" name="id" value="@entreprise.Id" />
                <td><input type="text" name="commentaire" value="@entreprise.Commentaire" /></td>
                <td><input type="number" name="note" min="0" max="5" step="1" value="@entreprise.note" /></td>
                <td><button type="submit">OK</button></td>
                </form>
            </tr>
        }
    </tbody>
</table>

<!-- Carte avec toutes les entreprises -->
<button id="showAllMap" onclick="showAllMarkers()">Afficher toutes les entreprises sur la carte</button>
<div id="map" style="width: 100%; height: 500px; margin-top: 10px;"></div>

<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />

<script>
    const entreprises = [
    @foreach (var entreprise in Model.AllEntreprises) // Utiliser AllEntreprises ici
    {
        if (!string.IsNullOrEmpty(entreprise.Coordonnees))
        {
            var coords = entreprise.Coordonnees.Split(',');
            <text>{
                        nom: '@entreprise.Nom',
                        lat: @coords[0],
                        lng: @coords[1]
                    },</text>
        }
    }
    ];

    let map;

    // Initialisation de la carte
    function initMap() {
        // Initialisation de la carte centrée sur la France
        map = L.map('map').setView([46.603354, 1.8883335], 6); // Centre de la France

        // Ajouter le fond de carte (OpenStreetMap par défaut)
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);
    }

    // Affichage des marqueurs pour toutes les entreprises
    function showAllMarkers() {
        entreprises.forEach((entreprise) => {
            const marker = L.marker([parseFloat(entreprise.lat), parseFloat(entreprise.lng)])
                .addTo(map)
                .bindPopup(`<b>${entreprise.nom}</b>`)
                .openPopup();
        });
    }

    // Initialiser la carte lorsque la page est chargée
    window.onload = initMap;
</script>
